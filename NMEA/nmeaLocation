#!/usr/bin/python
###############################################################
## nmeaParser.py
## Author: Todd Sukolsky
## Copyright of Todd Sukolsky
## Date Created: 2/9/2013
## Last Revised: 2/9/2013
###############################################################
## Description:
## This script is the foundation for a NMEA string parser
## The script, initially, will pipe data from a USB to 
## a temp file, then look at what is in the temp file for 
## certain NMEA strings. Note the kinds of strings below.
## 
## The final implemention of this parser will be deployed
## onto the BeagleBone where GPS data will be streamed in 
## via UART4 or 5 whcih will be used for GPS location 
## tracking and setting up the time.
##
## This file reads in NMEA data from a file and puts it into a different
## file with actual locations
###############################################################
## Kinds of NMEA (2.0) strings: (more info at http://www.gpsinformation.org/dale/nmea.htm)
## GPAPB: Auto Pilot B <not used>
## GPBOD: Bearing <not used>
## GPGGA: Fix data <used>
## GPGLL: Lat/Lon data <used>
## GPGSA: Overall satellite reception data <unknown use>
## GPSGSV: Detailed satellite data <not used>
## GPRMB:  Minimum data required when following route <not used>
## GPRMC: Minimum data recommended <not used>
## GPRTE: Route data <not used>
## GPWPL: Waypoint data <not use>
###############################################################

READFILE = '/home/todd/Documents/BoneDev/customFiles/NMEA/raw_strings.txt'
WRITEFILE='/home/todd/Documents/BoneDev/customFiles/NMEA/locations.txt'

#read the file
infile = open(READFILE,'r')
writefile = open(WRITEFILE,'w')
writefile.write('TIME\t\tLAT\t\tLOG\n\n')

#Fin string storing locations, GPGGA
for lines in infile.readlines():
	itsHere=lines.find('GPGGA')
	if (itsHere != -1):	#found it
		splitLine=lines.split(',')
		#As long as there isn't a NOFIX, manipulate data and place
		if (int(splitLine[6]) != 0):
			time=splitLine[1]
			hms=str(int(time[:2])-5)+':'+time[2:4]+':'+time[4:6]		#converts from UTC to EST
			lat=splitLine[2]+','+splitLine[3]
			log=splitLine[4]+','+splitLine[5]
			writefile.write(hms+'\t'+lat+'\t'+log+'\n')

writefile.close()


















